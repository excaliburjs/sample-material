{"version":3,"file":"index-CrfoocG_.js","sources":["../../src/outline/sword.png?url","../../src/outline/outline.ts"],"sourcesContent":["export default \"__VITE_ASSET__D3wXWR5B__\"","import { Actor, Color, DisplayMode, Engine, ImageSource, Loader, Sprite } from 'excalibur';\nimport swordImg from './sword.png?url';\nconst sword = new ImageSource(swordImg);\nconst loader = new Loader([sword]);\n\nconst game = new Engine({\n    width: 800,\n    height: 800,\n    displayMode: DisplayMode.FitScreen,\n    backgroundColor: Color.Black,\n    suppressPlayButton: true\n});\n\nconst outline = `#version 300 es\nprecision mediump float;\n\nuniform float u_time_ms;\nuniform sampler2D u_graphic;\n\nin vec2 v_uv;\nin vec2 v_screenuv;\nout vec4 fragColor;\n\nvec3 hsv2rgb(vec3 c){\n  vec4 K=vec4(1.,2./3.,1./3.,3.);\n  return c.z*mix(K.xxx,clamp(abs(fract(c.x+K.xyz)*6.-K.w)-K.x, 0., 1.),c.y);\n}\n\nvoid main() {\n  const float TAU = 6.28318530;\n  const float steps = 4.0; // up/down/left/right pixels\n  float radius = 2.0;\n  float time_sec = u_time_ms / 1000.;\n\n  vec3 outlineColorHSL = vec3(sin(time_sec/2.0) * 1., 1., 1.);\n  vec2 aspect = 1.0 / vec2(textureSize(u_graphic, 0));\n\n  for (float i = 0.0; i < TAU; i += TAU / steps) {\n    // Sample image in a circular pattern\n    vec2 offset = vec2(sin(i), cos(i)) * aspect * radius;\n    vec4 col = texture(u_graphic, v_uv + offset);\n\n    // Mix outline with background\n    float alpha = smoothstep(0.5, 0.7, col.a);\n    fragColor = mix(fragColor, vec4(hsv2rgb(outlineColorHSL), 1.0), alpha); // apply outline\n  }\n\n  // Overlay original texture\n  vec4 mat = texture(u_graphic, v_uv);\n  float factor = smoothstep(0.5, 0.7, mat.a);\n  fragColor = mix(fragColor, mat, factor);\n}\n`\n\nconst outlineMaterial = game.graphicsContext.createMaterial({\n    name: 'outline',\n    fragmentSource: outline\n});\n\n\nconst actor = new Actor({ x: 100, y: 100, width: 50, height: 50 });\nactor.onInitialize = () => {\n    var sprite = new Sprite({\n        image: sword,\n        destSize: {\n            width: 300,\n            height: 300\n        }\n    });\n    actor.graphics.add(sprite);\n};\nactor.graphics.material = outlineMaterial;\n\n\ngame.add(actor);\ngame.input.pointers.primary.on('move', evt => {\n    actor.pos = evt.worldPos;\n});\n\ngame.start(loader);\n"],"names":["swordImg","sword","ImageSource","loader","Loader","game","Engine","DisplayMode","Color","outline","outlineMaterial","actor","Actor","sprite","Sprite","evt"],"mappings":"sFAAA,MAAeA,EAAA,6CCETC,EAAQ,IAAIC,EAAYF,CAAQ,EAChCG,EAAS,IAAIC,EAAO,CAACH,CAAK,CAAC,EAE3BI,EAAO,IAAIC,EAAO,CACpB,MAAO,IACP,OAAQ,IACR,YAAaC,EAAY,UACzB,gBAAiBC,EAAM,MACvB,mBAAoB,EACxB,CAAC,EAEKC,EAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAyCVC,EAAkBL,EAAK,gBAAgB,eAAe,CACxD,KAAM,UACN,eAAgBI,CACpB,CAAC,EAGKE,EAAQ,IAAIC,EAAM,CAAE,EAAG,IAAK,EAAG,IAAK,MAAO,GAAI,OAAQ,EAAA,CAAI,EACjED,EAAM,aAAe,IAAM,CACnB,IAAAE,EAAS,IAAIC,EAAO,CACpB,MAAOb,EACP,SAAU,CACN,MAAO,IACP,OAAQ,GAAA,CACZ,CACH,EACKU,EAAA,SAAS,IAAIE,CAAM,CAC7B,EACAF,EAAM,SAAS,SAAWD,EAG1BL,EAAK,IAAIM,CAAK,EACdN,EAAK,MAAM,SAAS,QAAQ,GAAG,OAAeU,GAAA,CAC1CJ,EAAM,IAAMI,EAAI,QACpB,CAAC,EAEDV,EAAK,MAAMF,CAAM"}